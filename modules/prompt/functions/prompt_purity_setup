# Purity

# Based on
# Pure
# by Sindre Sorhus
# https://github.com/sindresorhus/pure
# MIT License

# For my own and others sanity
# git:
# %b => current branch
# %a => current action (rebase/merge)
# prompt:
# %F => color dict
# %f => reset color
# %~ => current path
# %* => time
# %n => username
# %m => shortname host
# %(?..) => prompt conditional - %(condition.true.false)


# turns seconds into human readable time
# e.g. 165392 => 1d 21h 56m 32s
prompt_purity_human_time() {
    echo -n " "
    local tmp=$1
    local days=$(( tmp / 60 / 60 / 24 ))
    local hours=$(( tmp / 60 / 60 % 24 ))
    local minutes=$(( tmp / 60 % 60 ))
    local seconds=$(( tmp % 60 ))
    (( $days > 0 )) && echo -n "${days}d "
    (( $hours > 0 )) && echo -n "${hours}h "
    (( $minutes > 0 )) && echo -n "${minutes}m "
    echo "${seconds}s"
}

# displays the exec time of the last command if set threshold was exceeded
prompt_purity_cmd_exec_time() {
    local stop=$EPOCHSECONDS
    local start=${cmd_timestamp:-$stop}
    integer elapsed=$stop-$start
    (($elapsed > ${PURITY_CMD_MAX_EXEC_TIME:=5})) && prompt_purity_human_time $elapsed
}

function prompt_purity_pwd {
  local pwd="${PWD/#$HOME/~}"

  if [[ "$pwd" == (#m)[/~] ]]; then
    _prompt_purity_pwd="$MATCH"
    unset MATCH
  else
    _prompt_purity_pwd="${${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}//\%/%%}/${${pwd:t}//\%/%%}"
  fi
}

prompt_purity_preexec() {
    cmd_timestamp=$EPOCHSECONDS

    # # shows the current dir and executed command in the title when a process is active
    # print -Pn "\e]0;"
    # echo -nE "$PWD:t: $2"
    # print -Pn "\a"
}

prompt_purity_precmd() {
    # # shows the full path in the title
    # print -Pn '\e]0;%~\a'

    # Format PWD
    prompt_purity_pwd

    local prompt_purity_preprompt="%F{yellow}$(prompt_purity_cmd_exec_time) %F{blue}$_prompt_purity_pwd%f"

    # I like a bit more spacing.
    print ""
    RPROMPT=$prompt_purity_preprompt

    # print -P $prompt_purity_preprompt

    # reset value since `preexec` isn't always triggered
    unset cmd_timestamp
}

prompt_purity_setup() {
    setopt LOCAL_OPTIONS
    unsetopt XTRACE KSH_ARRAYS
    prompt_opts=(cr percent subst)

  # prevent percentage showing up
    # if output doesn't end with a newline
    export PROMPT_EOL_MARK=''

    zmodload zsh/datetime
    autoload -Uz add-zsh-hook

    add-zsh-hook precmd prompt_purity_precmd
    add-zsh-hook preexec prompt_purity_preexec

    # show username@host if logged in through SSH
    [[ "$SSH_CONNECTION" != '' ]] && prompt_purity_username=' %n@%m'

    # show username@host if root, with username in white
    [[ $UID -eq 0 ]] && prompt_purity_username=' %F{white}%n%F{242}@%m'

    # prompt turns red if the previous command didn't exit with 0
    PROMPT=" %(?.%F{magenta}.%F{red})${PURITY_PROMPT_SYMBOL:-‚ùØ}%f "
}

prompt_purity_setup "$@"
